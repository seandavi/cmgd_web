"""empty message

Revision ID: 3ae683f7bf95
Revises: 
Create Date: 2020-10-29 22:23:58.418236

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3ae683f7bf95'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nextflow_events',
    sa.Column('event_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('run_name', sa.String(), nullable=True),
    sa.Column('run_id', postgresql.UUID(), nullable=True),
    sa.Column('utc_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event', sa.String(), nullable=True),
    sa.Column('trace', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('samples',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hash', sa.String(), nullable=True, comment='hash of sample identifiers'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_samples_hash'), 'samples', ['hash'], unique=True)
    op.create_table('sra_runs',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('accession', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('accession')
    )
    op.create_table('studies',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('pubmed', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name')
    )
    op.create_table('variables',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('variable', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('var_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_variables_value'), 'variables', ['value'], unique=False)
    op.create_index(op.f('ix_variables_var_type'), 'variables', ['var_type'], unique=False)
    op.create_index(op.f('ix_variables_variable'), 'variables', ['variable'], unique=False)
    op.create_table('workflow_stats',
    sa.Column('loadCpus', sa.Integer(), nullable=True),
    sa.Column('peakCpus', sa.Integer(), nullable=True),
    sa.Column('cachedPct', sa.Float(), nullable=True),
    sa.Column('failedPnc', sa.Float(), nullable=True),
    sa.Column('processes', sa.Integer(), nullable=True),
    sa.Column('ignoredPct', sa.Float(), nullable=True),
    sa.Column('loadMemory', sa.Integer(), nullable=True),
    sa.Column('peakMemory', sa.Integer(), nullable=True),
    sa.Column('succeedPct', sa.Float(), nullable=True),
    sa.Column('failedCout', sa.Integer(), nullable=True),
    sa.Column('peakRunning', sa.Integer(), nullable=True),
    sa.Column('abortedCount', sa.Integer(), nullable=True),
    sa.Column('ignoredCount', sa.Integer(), nullable=True),
    sa.Column('pendingCount', sa.Integer(), nullable=True),
    sa.Column('retriesCount', sa.Integer(), nullable=True),
    sa.Column('runningCount', sa.Integer(), nullable=True),
    sa.Column('loadMemoryFmt', sa.String(), nullable=True),
    sa.Column('peakMemoryFmt', sa.String(), nullable=True),
    sa.Column('CachedCountFmt', sa.String(), nullable=True),
    sa.Column('cachedDuration', sa.Integer(), nullable=True),
    sa.Column('computeTimeFmt', sa.String(), nullable=True),
    sa.Column('failedCountFmt', sa.String(), nullable=True),
    sa.Column('failedDuration', sa.Integer(), nullable=True),
    sa.Column('progressLength', sa.Integer(), nullable=True),
    sa.Column('submittedCount', sa.Integer(), nullable=True),
    sa.Column('succeededCount', sa.Integer(), nullable=True),
    sa.Column('changeTimestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ignoredCountFmt', sa.String(), nullable=True),
    sa.Column('succeedCountFmt', sa.String(), nullable=True),
    sa.Column('succeedDuration', sa.Integer(), nullable=True)
    )
    op.create_table('workflows',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('commandLine', sa.String(), nullable=True),
    sa.Column('commitId', sa.String(), nullable=True),
    sa.Column('complete', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('configFiles', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('container', sa.String(), nullable=True),
    sa.Column('containerEngine', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('nextflow_traces',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('events_uuid', postgresql.UUID(), nullable=True),
    sa.Column('env', sa.String(), nullable=True),
    sa.Column('rss', sa.Integer(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('cpus', sa.Float(), nullable=True),
    sa.Column('disk', sa.Float(), nullable=True),
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('queue', sa.String(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('script', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('submit', sa.DateTime(), nullable=True),
    sa.Column('process', sa.String(), nullable=True),
    sa.Column('workdir', sa.String(), nullable=True),
    sa.Column('exit', sa.Integer(), nullable=True),
    sa.Column('attempt', sa.Integer(), nullable=True),
    sa.Column('scratch', sa.Integer(), nullable=True),
    sa.Column('container', sa.String(), nullable=True),
    sa.Column('native_id', sa.String(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['events_uuid'], ['nextflow_events.event_id'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_nextflow_traces_container'), 'nextflow_traces', ['container'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_events_uuid'), 'nextflow_traces', ['events_uuid'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_exit'), 'nextflow_traces', ['exit'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_process'), 'nextflow_traces', ['process'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_start'), 'nextflow_traces', ['start'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_status'), 'nextflow_traces', ['status'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_submit'), 'nextflow_traces', ['submit'], unique=False)
    op.create_index(op.f('ix_nextflow_traces_task_id'), 'nextflow_traces', ['task_id'], unique=False)
    op.create_table('samples_to_sra_runs',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('sample_uuid', postgresql.UUID(), nullable=True),
    sa.Column('sra_run_uuid', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['sample_uuid'], ['samples.uuid'], ),
    sa.ForeignKeyConstraint(['sra_run_uuid'], ['sra_runs.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('sample_uuid', 'sra_run_uuid')
    )
    op.create_index(op.f('ix_samples_to_sra_runs_sample_uuid'), 'samples_to_sra_runs', ['sample_uuid'], unique=False)
    op.create_index(op.f('ix_samples_to_sra_runs_sra_run_uuid'), 'samples_to_sra_runs', ['sra_run_uuid'], unique=False)
    op.create_table('samples_to_studies',
    sa.Column('sample_uuid', postgresql.UUID(), nullable=True),
    sa.Column('study_uuid', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['sample_uuid'], ['samples.uuid'], ),
    sa.ForeignKeyConstraint(['study_uuid'], ['studies.uuid'], ),
    sa.UniqueConstraint('sample_uuid', 'study_uuid')
    )
    op.create_table('samples_to_variables',
    sa.Column('sample_uuid', postgresql.UUID(), nullable=True),
    sa.Column('variable_uuid', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['sample_uuid'], ['samples.uuid'], ),
    sa.ForeignKeyConstraint(['variable_uuid'], ['variables.uuid'], ),
    sa.UniqueConstraint('sample_uuid', 'variable_uuid')
    )
    op.create_index(op.f('ix_samples_to_variables_sample_uuid'), 'samples_to_variables', ['sample_uuid'], unique=False)
    op.create_index(op.f('ix_samples_to_variables_variable_uuid'), 'samples_to_variables', ['variable_uuid'], unique=False)
    op.create_table('workflow_processes',
    sa.Column('uuid', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('workflows_uuid', postgresql.UUID(), nullable=True),
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('index', sa.Integer(), nullable=True),
    sa.Column('cached', sa.Integer(), nullable=True),
    sa.Column('failed', sa.Integer(), nullable=True),
    sa.Column('stored', sa.Integer(), nullable=True),
    sa.Column('aborted', sa.Integer(), nullable=True),
    sa.Column('errored', sa.Boolean(), nullable=True),
    sa.Column('ignored', sa.Integer(), nullable=True),
    sa.Column('pending', sa.Integer(), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('running', sa.Integer(), nullable=True),
    sa.Column('loadCpus', sa.Integer(), nullable=True),
    sa.Column('peakCpus', sa.Integer(), nullable=True),
    sa.Column('submitted', sa.Integer(), nullable=True),
    sa.Column('succeeded', sa.Integer(), nullable=True),
    sa.Column('loadMemory', sa.Integer(), nullable=True),
    sa.Column('peakMemory', sa.Integer(), nullable=True),
    sa.Column('totalCount', sa.Integer(), nullable=True),
    sa.Column('taskName', sa.String(), nullable=True),
    sa.Column('terminated', sa.Boolean(), nullable=True),
    sa.Column('peakRunning', sa.Integer(), nullable=True),
    sa.Column('completedCount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['workflows_uuid'], ['workflows.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_workflow_processes_workflows_uuid'), 'workflow_processes', ['workflows_uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workflow_processes_workflows_uuid'), table_name='workflow_processes')
    op.drop_table('workflow_processes')
    op.drop_index(op.f('ix_samples_to_variables_variable_uuid'), table_name='samples_to_variables')
    op.drop_index(op.f('ix_samples_to_variables_sample_uuid'), table_name='samples_to_variables')
    op.drop_table('samples_to_variables')
    op.drop_table('samples_to_studies')
    op.drop_index(op.f('ix_samples_to_sra_runs_sra_run_uuid'), table_name='samples_to_sra_runs')
    op.drop_index(op.f('ix_samples_to_sra_runs_sample_uuid'), table_name='samples_to_sra_runs')
    op.drop_table('samples_to_sra_runs')
    op.drop_index(op.f('ix_nextflow_traces_task_id'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_submit'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_status'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_start'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_process'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_exit'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_events_uuid'), table_name='nextflow_traces')
    op.drop_index(op.f('ix_nextflow_traces_container'), table_name='nextflow_traces')
    op.drop_table('nextflow_traces')
    op.drop_table('workflows')
    op.drop_table('workflow_stats')
    op.drop_index(op.f('ix_variables_variable'), table_name='variables')
    op.drop_index(op.f('ix_variables_var_type'), table_name='variables')
    op.drop_index(op.f('ix_variables_value'), table_name='variables')
    op.drop_table('variables')
    op.drop_table('studies')
    op.drop_table('sra_runs')
    op.drop_index(op.f('ix_samples_hash'), table_name='samples')
    op.drop_table('samples')
    op.drop_table('nextflow_events')
    # ### end Alembic commands ###
